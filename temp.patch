*** Begin Patch
*** Update File: apps/api/src/modules/catalog/public-blog.controller.ts
@@
-const DAY_MS = 24 * 60 * 60 * 1000;
-const KNOWN_SOURCE_KEYS = new Set(['direct', 'internal', 'search', 'social', 'referral', 'email', 'campaign']);
+const DAY_MS = 24 * 60 * 60 * 1000;
+const KNOWN_SOURCE_KEYS = new Set(['direct', 'internal', 'search', 'social', 'referral', 'email', 'campaign']);
+
+function shapePublicComment(comment: any): any {
+  if (!comment) return null;
+  const replies = Array.isArray(comment.replies)
+    ? comment.replies.map((entry: any) => shapePublicComment(entry)).filter((entry: any) => Boolean(entry))
+    : [];
+
+  return {
+    id: comment.id,
+    parentId: comment.parentId ?? null,
+    content: comment.content,
+    status: comment.status,
+    languageCode: comment.languageCode ?? null,
+    createdAt: comment.createdAt,
+    updatedAt: comment.updatedAt,
+    author: comment.author
+      ? { id: comment.author.id, name: comment.author.name, email: comment.author.email }
+      : null,
+    authorName: comment.author?.name ?? comment.authorName ?? null,
+    authorEmail: comment.author?.email ?? comment.authorEmail ?? null,
+    moderationTags: Array.isArray(comment.moderationTags) ? comment.moderationTags : [],
+    autoFlagged: Boolean(comment.autoFlagged),
+    toxicityScore: comment.toxicityScore ?? null,
+    spamScore: comment.spamScore ?? null,
+    replies
+  };
+}
@@
-function transformPublicPostForResponse(post: any, language?: string) {
+function transformPublicPostForResponse(post: any, language?: string) {
   const availableLanguages = mapAvailableLanguages(post?.translations);
   const normalizedLanguage = typeof language === 'string' ? language.trim().toLowerCase() : '';
   const translation = normalizedLanguage
     ? post?.translations?.find((entry: any) => entry?.language?.toLowerCase() === normalizedLanguage)
     : null;
 
   const summary = translation?.aiSummary || translation?.excerpt || post?.aiSummary || post?.summary || post?.excerpt || null;
   const activeLanguage = translation ? normalizedLanguage : 'default';
 
   const normalizedTranslations = availableLanguages.map((languageCode) => {
     const translationEntry = post?.translations?.find((entry: any) => entry?.language?.toLowerCase() === languageCode);
     return {
       language: languageCode,
       title: translationEntry?.title ?? null,
       excerpt: translationEntry?.excerpt ?? null,
       aiSummary: translationEntry?.aiSummary ?? null
     };
   });
 
-  const commentCount = Array.isArray(post?.comments) ? post.comments.length : post?.commentCount ?? 0;
+  const shapedComments = Array.isArray(post?.comments)
+    ? post.comments
+        .map((entry: any) => shapePublicComment(entry))
+        .filter((entry: any) => Boolean(entry))
+    : [];
+
+  const countReplies = (items: any[]): number =>
+    items.reduce((total, item) => total + 1 + countReplies(item?.replies ?? []), 0);
+
+  const commentCount =
+    typeof post?._count?.comments === 'number'
+      ? post._count.comments
+      : countReplies(shapedComments);
 
   return {
     id: post?.id,
     title: translation?.title || post?.title,
     slug: post?.slug,
@@
-    comments: post?.comments,
+    comments: shapedComments,
*** End Patch
